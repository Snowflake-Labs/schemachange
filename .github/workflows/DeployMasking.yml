# This is a basic workflow to help you get started with Actions
name: zeus-DepolyMasking
# Controls when the workflow will run
on:
  # Triggers the workflow on push
  push:
    branches: 
      - master
    paths:
      - 'zeus-MaskingPolicy/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Job Desc- Run schemachange on pr-init
  Schemachange-Deploy:

    ##self-hosted runner >> 
    runs-on: self-hosted
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Check IP 
      - name: Check IP
        run: curl https://api.ipify.org

      - name: Create venv
        id: venv
        run: |
            pwd
            python3.7 -m venv venv
            source venv/bin/activate 
            pip install --upgrade pip 
            pip install schemachange

      - name: Deploy on ZEUSDUMMY
        id: ZEUSDUMMY
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_ZEUS_PASSWORD}}
          VARS: '{"SF_DATABASE":"ZEUSDUMMY","SF_STORAGE_INTEGRATION":"${{ secrets.SF_PROD_STORAGE_INTEGRATION}}","SF_S3_ETLDATA_URL":"${{ secrets.SF_PROD_S3_ETLDATA_URL}}"}'
        if: steps.venv.outcome == 'success'  
        run: |
            pwd
            source venv/bin/activate
            pip --version 
            schemachange -f ./zeus-MaskingPolicy -a ${{ secrets.SF_ACCOUNT}} -u ${{ secrets.SF_ZEUS_USER}} -r ${{ secrets.SF_ZEUS_ROLE}} -w ${{ secrets.SF_DBA_WH}} -d SC_ZEUSDEFAULT --vars $VARS -c ZEUS.SCHEMACHANGE.CHANGE_HISTORY_ZEUSDUMMY --create-change-history-table

      - name: Run schemachange
        id: ProdRun
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_ZEUS_PASSWORD}}
          VARS: '{"SF_DATABASE":"ZEUS","SF_STORAGE_INTEGRATION":"${{ secrets.SF_PROD_STORAGE_INTEGRATION}}","SF_S3_ETLDATA_URL":"${{ secrets.SF_PROD_S3_ETLDATA_URL}}"}'
        if: steps.ZEUSDUMMY.outcome == 'success'
        run: |
            pwd
            source venv/bin/activate
            pip --version 
            schemachange -f ./zeus-MaskingPolicy -a ${{ secrets.SF_ACCOUNT}} -u ${{ secrets.SF_ZEUS_USER}} -r ${{ secrets.SF_ZEUS_ROLE}} -w ${{ secrets.SF_DBA_WH}} -d SC_ZEUSDEFAULT --vars $VARS -c ZEUS.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table


