# This is a basic workflow to help you get started with Actions
name: zeus-pr-init
# Controls when the workflow will run
on: 
  pull_request:
    paths:
      - 'sc-zeus/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Job Desc- Run schemachange on pr-init
  schemachange-on-pr-init:

    ##self-hosted runner >> 
    # runs-on: self-hosted
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # Check IP 
      - name: Check IP
        run: curl https://api.ipify.org

      # Find the PR associated with this push, if there is one.
      - name: findPR
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          # Can be "open", "closed", or "all".  Defaults to "open".
          state: open
        # echo PR.
      - run: echo "Your PR is ${PR}"
        if: success() && steps.findPr.outputs.number
        env:
          PR: ${{ steps.findPr.outputs.pr }}

      - name: Create venv
        id: venv
        run: |
            pwd
            python3.7 -m venv venv
            source venv/bin/activate 
            pip install --upgrade pip 
            pip install schemachange

      - name: Dry Run schemachange
        id: DryRun
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_TEST_PASSWORD}}
          VARS: '{"SF_DATABASE":"TEST_PR_${{ steps.findPr.outputs.pr }}","SF_STORAGE_INTEGRATION":"${{ secrets.SF_TEST_STORAGE_INTEGRATION}}","SF_S3_ETLDATA_URL":"${{ secrets.SF_TEST_S3_ETLDATA_URL}}"}'
          PR_NUM: ${{ steps.findPr.outputs.pr }}
        if: steps.venv.outcome == 'success'
        run: |
            pwd
            source venv/bin/activate
            pip --version 
            schemachange -f ./sc-zeus -a ${{ secrets.SF_ACCOUNT}} -u ${{ secrets.SF_TEST_USER}} -r ${{ secrets.SF_TEST_ROLE}} -w ${{ secrets.SF_TEST_WAREHOUSE}} -d SC_ZEUSDEFAULT --vars $VARS -c ARES.SCHEMACHANGE.CHANGE_HISTORY_PR_$PR_NUM --create-change-history-table --dry-run

      - name: Run schemachange
        id: TestRun
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_TEST_PASSWORD}}
          VARS: '{"SF_DATABASE":"TEST_PR_${{ steps.findPr.outputs.pr }}","SF_STORAGE_INTEGRATION":"${{ secrets.SF_TEST_STORAGE_INTEGRATION}}","SF_S3_ETLDATA_URL":"${{ secrets.SF_TEST_S3_ETLDATA_URL}}"}'
          PR_NUM: ${{ steps.findPr.outputs.pr }}
        if: steps.DryRun.outcome == 'success'
        run: |
            pwd
            source venv/bin/activate
            pip --version 
            schemachange -f ./sc-zeus -a ${{ secrets.SF_ACCOUNT}} -u ${{ secrets.SF_TEST_USER}} -r ${{ secrets.SF_TEST_ROLE}} -w ${{ secrets.SF_TEST_WAREHOUSE}} -d SC_ZEUSDEFAULT --vars $VARS -c ARES.SCHEMACHANGE.CHANGE_HISTORY_PR_$PR_NUM --create-change-history-table
