-- LEGACY APPROACH: Manual data definitions in Jinja
-- This shows the "before" state that LocalDataInjection improves upon
-- Instead of using from_csv('weather.csv', as_dict=true), we manually define the data structure

{% set weather_definitions = [
    ('V', 'VARIANT', 'NOT NULL', 'Weather data as JSON variant', '$1', '$1', 'V'),
    ('T', 'TIMESTAMP', 'NOT NULL', 'Timestamp of weather data', 'CONVERT_TIMEZONE(\'UTC\', \'US/Eastern\', $1:time::TIMESTAMP_NTZ)', 'CONVERT_TIMEZONE(\'UTC\', \'US/Eastern\', $1:time::TIMESTAMP_NTZ)', 'CAST(T AS TIMESTAMP)'),
    ('METADATA', 'VARIANT', 'NOT NULL', 'File metadata', 'OBJECT_CONSTRUCT(\'filename\', METADATA$FILENAME, \'file_row_number\', METADATA$FILE_ROW_NUMBER, \'file_content_key\', METADATA$FILE_CONTENT_KEY, \'file_last_modified\', METADATA$FILE_LAST_MODIFIED, \'start_scan_time\', METADATA$START_SCAN_TIME)', 'OBJECT_CONSTRUCT(\'filename\', METADATA$FILENAME, \'file_row_number\', METADATA$FILE_ROW_NUMBER, \'file_content_key\', METADATA$FILE_CONTENT_KEY, \'file_last_modified\', METADATA$FILE_LAST_MODIFIED, \'start_scan_time\', METADATA$START_SCAN_TIME)', 'METADATA'),
    ('LOAD_TIME', 'TIMESTAMP_NTZ', 'NOT NULL', 'Load timestamp', 'CURRENT_TIMESTAMP()', 'CURRENT_TIMESTAMP()', 'LOAD_TIME')
] %}
